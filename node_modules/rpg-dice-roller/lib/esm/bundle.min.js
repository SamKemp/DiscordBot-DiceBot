/**
 * rpg-dice-roller - An advanced JS based dice roller that can roll various types of dice and modifiers, along with mathematical equations.
 * 
 * @version 5.0.0
 * @license MIT
 * @author GreenImp <info@greenimp.co.uk> (http://greenimp.co.uk)
 * @link https://greenimp.github.io/rpg-dice-roller/
 */

import{evaluate as t}from"mathjs";class CompareOperatorError extends TypeError{constructor(t){super(`Operator "${t}" is invalid`),TypeError.captureStackTrace&&TypeError.captureStackTrace(this,CompareOperatorError),this.name="CompareOperatorError",this.operator=t}}class DataFormatError extends Error{constructor(t){super(`Invalid data format: ${t}`),Error.captureStackTrace&&Error.captureStackTrace(this,DataFormatError),this.name="ImportError",this.data=t}}class DieActionValueError extends Error{constructor(t,e=null){super(`Die "${t}" must have more than 1 possible value to ${e||"do this action"}`),Error.captureStackTrace&&Error.captureStackTrace(this,DieActionValueError),this.name="DieActionValueError",this.action=e,this.die=t}}class NotationError extends Error{constructor(t){super(`Notation "${t}" is invalid`),Error.captureStackTrace&&Error.captureStackTrace(this,NotationError),this.name="NotationError",this.notation=t}}class RequiredArgumentError extends Error{constructor(t=null){super("Missing argument"+(t?` "${t}"`:"")),Error.captureStackTrace&&Error.captureStackTrace(this,RequiredArgumentError),this.argumentName=t}}var e=Object.freeze({__proto__:null,CompareOperatorError:CompareOperatorError,DataFormatError:DataFormatError,DieActionValueError:DieActionValueError,NotationError:NotationError,RequiredArgumentError:RequiredArgumentError});const r=e=>t(e),n=t=>("number"==typeof t||"string"==typeof t)&&(!Number.isNaN(t)&&Number.isFinite(Number(t))),i=t=>{if(!n(t))return!1;const e=Number(t);return e<=Number.MAX_SAFE_INTEGER&&e>=Number.MIN_SAFE_INTEGER};function o(t){return 0|t.next()}function s(t,e){return 0===e?t:r=>t(r)+e}function a(t){const e=0|t.next();return 4294967296*(2097151&e)+(t.next()>>>0)+(2097152&e?-9007199254740992:0)}function u(t){for(;;){const e=0|t.next();if(!(4194304&e)){return 4294967296*(2097151&e)+(t.next()>>>0)+(2097152&e?-9007199254740992:0)}if(4194304==(8388607&e)&&0==(0|t.next()))return 9007199254740992}}function l(t){return t.next()>>>0}function c(t){return 4294967296*(2097151&t.next())+(t.next()>>>0)}function h(t){for(;;){const e=0|t.next();if(!(2097152&e)){return 4294967296*(2097151&e)+(t.next()>>>0)}if(0==(2097151&e)&&0==(0|t.next()))return 9007199254740992}}function f(t){return 0==(t+1&t)}function p(t){return f(t)?(e=t,t=>t.next()&e):function(t){const e=t+1,r=e*Math.floor(4294967296/e);return t=>{let n=0;do{n=t.next()>>>0}while(n>=r);return n%e}}(t);var e}function d(t){const e=t+1;if(0==(0|e)){const t=(e/4294967296|0)-1;if(f(t))return r=t,t=>4294967296*(t.next()&r)+(t.next()>>>0)}var r;return function(t){const e=t*Math.floor(9007199254740992/t);return r=>{let n=0;do{n=4294967296*(2097151&r.next())+(r.next()>>>0)}while(n>=e);return n%t}}(e)}function m(t,e){return r=>{let n=0;do{const t=0|r.next();n=4294967296*(2097151&t)+(r.next()>>>0)+(2097152&t?-9007199254740992:0)}while(n<t||n>e);return n}}function g(t,e){if(t=Math.floor(t),e=Math.floor(e),t<-9007199254740992||!isFinite(t))throw new RangeError("Expected min to be at least -9007199254740992");if(e>9007199254740992||!isFinite(e))throw new RangeError("Expected max to be at most 9007199254740992");const r=e-t;return r<=0||!isFinite(r)?()=>t:4294967295===r?0===t?l:s(o,t+2147483648):r<4294967295?s(p(r),t):9007199254740991===r?s(c,t):r<9007199254740991?s(d(r),t):e-1-t==9007199254740991?s(h,t):-9007199254740992===t&&9007199254740992===e?u:-9007199254740992===t&&9007199254740991===e?a:-9007199254740991===t&&9007199254740992===e?s(a,1):9007199254740992===e?s(m(t-1,e-1),1):m(t,e)}function y(t){return 1==(1&t.next())}function w(t,e){return r=>t(r)<e}function b(t,e){return null==e?null==t?y:function(t){if(t<=0)return()=>!1;if(t>=1)return()=>!0;{const e=4294967296*t;return e%1==0?w(o,e-2147483648|0):w(c,Math.round(9007199254740992*t))}}(t):t<=0?()=>!1:t>=e?()=>!0:w(g(0,e-1),t)}function x(t){return g(1,t)}function E(t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-"){const e=t.length;if(!e)throw new Error("Expected pool not to be an empty string");const r=g(0,e-1);return(e,n)=>{let i="";for(let o=0;o<n;++o){const n=r(e);i+=t.charAt(n)}return i}}const v=E("0123456789abcdef"),R=E("0123456789abcdef".toUpperCase());function S(t,e){return t<0?Math.max(t+e,0):Math.min(t,e)}function A(t){const e=+t;return e<0?Math.ceil(e):Math.floor(e)}function M(t){return c(t)/9007199254740992}function C(t){return h(t)/9007199254740992}const T=Array.prototype.slice;function N(t,e,r=0){const n=e.length;if(n)for(let i=n-1>>>0;i>r;--i){const r=g(0,i)(t);if(i!==r){const t=e[i];e[i]=e[r],e[r]=t}}return e}const O=(()=>{try{if("xxx"==="x".repeat(3))return(t,e)=>t.repeat(e)}catch(t){}return(t,e)=>{let r="";for(;e>0;)1&e&&(r+=t),e>>=1,t+=t;return r}})();function $(t,e){return O("0",e-t.length)+t}const F={next:()=>4294967296*Math.random()|0};class Random{constructor(t=F){this.engine=t}int32(){return o(this.engine)}uint32(){return l(this.engine)}uint53(){return c(this.engine)}uint53Full(){return h(this.engine)}int53(){return a(this.engine)}int53Full(){return u(this.engine)}integer(t,e){return g(t,e)(this.engine)}realZeroToOneInclusive(){return C(this.engine)}realZeroToOneExclusive(){return M(this.engine)}real(t,e,r=!1){return function(t,e,r=!1){if(!isFinite(t))throw new RangeError("Expected min to be a finite number");if(!isFinite(e))throw new RangeError("Expected max to be a finite number");return s((n=r?C:M,1==(i=e-t)?n:0===i?()=>0:t=>n(t)*i),t);var n,i}(t,e,r)(this.engine)}bool(t,e){return b(t,e)(this.engine)}pick(t,e,r){return function(t,e,r,n){const i=e.length;if(0===i)throw new RangeError("Cannot pick from an empty array");const o=null==r?0:S(A(r),i),s=void 0===n?i:S(A(n),i);if(o>=s)throw new RangeError(`Cannot pick between bounds ${o} and ${s}`);return e[g(o,s-1)(t)]}(this.engine,t,e,r)}shuffle(t){return N(this.engine,t)}sample(t,e){return function(t,e,r){if(r<0||r>e.length||!isFinite(r))throw new RangeError("Expected sampleSize to be within 0 and the length of the population");if(0===r)return[];const n=T.call(e),i=n.length;if(i===r)return N(t,n,0);const o=i-r;return N(t,n,o-1).slice(o)}(this.engine,t,e)}die(t){return x(t)(this.engine)}dice(t,e){return function(t,e){const r=x(t);return t=>{const n=[];for(let i=0;i<e;++i)n.push(r(t));return n}}(t,e)(this.engine)}uuid4(){return function(t){const e=t.next()>>>0,r=0|t.next(),n=0|t.next(),i=t.next()>>>0;return $(e.toString(16),8)+"-"+$((65535&r).toString(16),4)+"-"+$((r>>4&4095|16384).toString(16),4)+"-"+$((16383&n|32768).toString(16),4)+"-"+$((n>>4&65535).toString(16),4)+$(i.toString(16),8)}(this.engine)}string(t,e){return E(e)(this.engine,t)}hex(t,e){return function(t){return t?R:v}(e)(this.engine,t)}date(t,e){return function(t,e){const r=g(+t,+e);return t=>new Date(r(t))}(t,e)(this.engine)}}const D=(()=>{try{const t=new ArrayBuffer(4),e=new Int32Array(t);if(e[0]=2147483648,-2147483648===e[0])return Int32Array}catch(t){}return Array})();let P=null;let J=128;const q={next:()=>(J>=128&&(null===P&&(P=new D(128)),crypto.getRandomValues(P),J=0),0|P[J++])};const I=(()=>{try{if(-5===Math.imul(4294967295,5))return Math.imul}catch(t){}const t=65535;return(e,r)=>{const n=e&t,i=r&t;return n*i+((e>>>16&t)*i+n*(r>>>16&t)<<16>>>0)|0}})(),j=2567483615;class MersenneTwister19937{constructor(){this.data=new D(624),this.index=0,this.uses=0}static seed(t){return(new MersenneTwister19937).seed(t)}static seedWithArray(t){return(new MersenneTwister19937).seedWithArray(t)}static autoSeed(){return MersenneTwister19937.seedWithArray(function(t=F,e=16){const r=[];r.push(0|(new Date).getTime());for(let n=1;n<e;++n)r[n]=0|t.next();return r}())}next(){(0|this.index)>=624&&(G(this.data),this.index=0);const t=this.data[this.index];return this.index=this.index+1|0,this.uses+=1,0|function(t){return t^=t>>>11,t^=t<<7&2636928640,(t^=t<<15&4022730752)^t>>>18}(t)}getUseCount(){return this.uses}discard(t){if(t<=0)return this;for(this.uses+=t,(0|this.index)>=624&&(G(this.data),this.index=0);t+this.index>624;)t-=624-this.index,G(this.data),this.index=0;return this.index=this.index+t|0,this}seed(t){let e=0;this.data[0]=e=0|t;for(let t=1;t<624;t=t+1|0)this.data[t]=e=I(e^e>>>30,1812433253)+t|0;return this.index=624,this.uses=0,this}seedWithArray(t){return this.seed(19650218),function(t,e){let r=1,n=0;const i=e.length;let o=0|Math.max(i,624),s=0|t[0];for(;(0|o)>0;--o)t[r]=s=(t[r]^I(s^s>>>30,1664525))+(0|e[n])+(0|n)|0,r=r+1|0,++n,(0|r)>623&&(t[0]=t[623],r=1),n>=i&&(n=0);for(o=623;(0|o)>0;--o)t[r]=s=(t[r]^I(s^s>>>30,1566083941))-r|0,r=r+1|0,(0|r)>623&&(t[0]=t[623],r=1);t[0]=2147483648}(this.data,t),this}}function G(t){let e=0,r=0;for(;(0|e)<227;e=e+1|0)r=2147483648&t[e]|2147483647&t[e+1|0],t[e]=t[e+397|0]^r>>>1^(1&r?j:0);for(;(0|e)<623;e=e+1|0)r=2147483648&t[e]|2147483647&t[e+1|0],t[e]=t[e-227|0]^r>>>1^(1&r?j:0);r=2147483648&t[623]|2147483647&t[0],t[623]=t[396]^r>>>1^(1&r?j:0)}let V=null;let k=128;const _={next:()=>(k>=128&&(V=new Int32Array(new Int8Array(require("crypto").randomBytes(512)).buffer),k=0),0|V[k++])},B=Symbol("engine"),z=Symbol("random"),K={browserCrypto:q,nodeCrypto:_,MersenneTwister19937:MersenneTwister19937,nativeMath:F,min:{next:()=>0},max:{range:[],next(){return this.range[1]-this.range[0]}}};const W=new class NumberGenerator{constructor(t=F){this.engine=t||F}get engine(){return this[B]}set engine(t){if(t&&"function"!=typeof t.next)throw new TypeError("engine must have function `next()`");this[B]=t||F,this[z]=new Random(this[B])}integer(t,e){return this[B].range=[t,e],this[z].integer(t,e)}real(t,e,r=!1){return this[B].range=[t,e],this[z].real(t,e,r)}};var U=Object.freeze({__proto__:null,engines:K,generator:W});const Z=Symbol("operator"),L=Symbol("value");class ComparePoint{constructor(t,e){if(!t)throw new RequiredArgumentError("operator");if(!e&&0!==e)throw new RequiredArgumentError("value");this.operator=t,this.value=e}static isValidOperator(t){return"string"==typeof t&&/^(?:[<>!]?=|[<>])$/.test(t)}set operator(t){if(!this.constructor.isValidOperator(t))throw new CompareOperatorError(t);this[Z]=t}get operator(){return this[Z]}set value(t){if(!n(t))throw new TypeError("value must be a finite number");this[L]=Number(t)}get value(){return this[L]}isMatch(t){return((t,e,r)=>{const n=Number(t),i=Number(e);let o;if(Number.isNaN(n)||Number.isNaN(i))return!1;switch(r){case"=":case"==":o=n===i;break;case"<":o=n<i;break;case">":o=n>i;break;case"<=":o=n<=i;break;case">=":o=n>=i;break;case"!":case"!=":o=n!==i;break;default:o=!1}return o})(t,this.value,this.operator)}toJSON(){const{operator:t,value:e}=this;return{operator:t,type:"compare-point",value:e}}toString(){return`${this.operator}${this.value}`}}class Modifier{constructor(){this.order=999}get name(){return"modifier"}get notation(){return""}get maxIterations(){return 1e3}run(t,e){return t}toJSON(){const{notation:t,name:e}=this;return{name:e,notation:t,type:"modifier"}}toString(){return this.notation}}const X=Symbol("compare-point");class ComparisonModifier extends Modifier{constructor(t){super(),t&&(this.comparePoint=t)}get comparePoint(){return this[X]}set comparePoint(t){if(!(t instanceof ComparePoint))throw new TypeError("comparePoint must be instance of ComparePoint");this[X]=t}get name(){return"comparison"}get notation(){return`${this.comparePoint||""}`}isComparePoint(t){return!!this.comparePoint&&this.comparePoint.isMatch(t)}toJSON(){const{comparePoint:t}=this;return Object.assign(super.toJSON(),{comparePoint:t})}}const H=Symbol("compound"),Q=Symbol("penetrate");class ExplodeModifier extends ComparisonModifier{constructor(t=null,e=!1,r=!1){super(t),this[H]=!!e,this[Q]=!!r,this.order=3}get compound(){return this[H]}get name(){return"explode"}get notation(){return`!${this.compound?"!":""}${this.penetrate?"p":""}${super.notation}`}get penetrate(){return this[Q]}run(t,e){if(e.min===e.max)throw new DieActionValueError(e,"explode");const r=t;return r.rolls=t.rolls.map((t=>{const r=[t];let i=t.value;for(let t=0;t<this.maxIterations&&this.isComparePoint(i);t++){const t=r[r.length-1],n=e.rollOnce();i=n.value,t.modifiers.add("explode"),this.penetrate&&(t.modifiers.add("penetrate"),n.value-=1),r.push(n)}return this.compound&&r.length>1?(t.value=(o=r.map((t=>t.value)),Array.isArray(o)?o.reduce(((t,e)=>t+(n(e)?parseFloat(`${e}`):0)),0):0),t.modifiers=["explode","compound"],this.penetrate&&t.modifiers.add("penetrate"),t):r;var o})).flat(),r}toJSON(){const{compound:t,penetrate:e}=this;return Object.assign(super.toJSON(),{compound:t,penetrate:e})}}const Y={compound:"!",explode:"!","critical-failure":"__","critical-success":"**",drop:"d",max:"v",min:"^",penetrate:"p","re-roll":"r","re-roll-once":"ro","target-failure":"_","target-success":"*"},tt=(...t)=>[...t].reduce(((t,e)=>{let r;return r=e instanceof Modifier?e.name:e,t+(Y[r]||r)}),""),et=Symbol("calculation-value"),rt=Symbol("modifiers"),nt=Symbol("initial-value"),it=Symbol("use-in-total"),ot=Symbol("value");class RollResult{constructor(t,e=[],r=!0){if(n(t))this[nt]=Number(t),this.modifiers=e||[],this.useInTotal=r;else{if(!t||"object"!=typeof t||Array.isArray(t))throw t===1/0?new RangeError("Result value must be a finite number"):new TypeError(`Result value is invalid: ${t}`);{const i=n(t.initialValue)?t.initialValue:t.value;if(!n(i))throw new TypeError(`Result value is invalid: ${i}`);this[nt]=Number(i),n(t.value)&&Number(t.value)!==this[nt]&&(this.value=t.value),n(t.calculationValue)&&parseFloat(`${t.calculationValue}`)!==this.value&&(this.calculationValue=t.calculationValue),this.modifiers=t.modifiers||e||[],this.useInTotal="boolean"==typeof t.useInTotal?t.useInTotal:r||!1}}}get calculationValue(){return n(this[et])?parseFloat(this[et]):this.value}set calculationValue(t){const e=n(t);if(t===1/0)throw new RangeError("Result calculation value must be a finite number");if(t&&!e)throw new TypeError(`Result calculation value is invalid: ${t}`);this[et]=e?parseFloat(`${t}`):null}get initialValue(){return this[nt]}get modifierFlags(){return tt(...this.modifiers)}get modifiers(){return this[rt]}set modifiers(t){if((Array.isArray(t)||t instanceof Set)&&[...t].every((t=>"string"==typeof t)))this[rt]=new Set([...t]);else{if(t||0===t)throw new TypeError(`modifiers must be a Set or array of modifier names: ${t}`);this[rt]=new Set}}get useInTotal(){return!!this[it]}set useInTotal(t){this[it]=!!t}get value(){return n(this[ot])?this[ot]:this[nt]}set value(t){if(t===1/0)throw new RangeError("Result value must be a finite number");if(!n(t))throw new TypeError(`Result value is invalid: ${t}`);this[ot]=Number(t)}toJSON(){const{calculationValue:t,initialValue:e,modifierFlags:r,modifiers:n,useInTotal:i,value:o}=this;return{calculationValue:t,initialValue:e,modifierFlags:r,modifiers:[...n],type:"result",useInTotal:i,value:o}}toString(){return this.value+this.modifierFlags}}const st=Symbol("rolls");class RollResults{constructor(t=[]){this.rolls=t}get length(){return this.rolls.length||0}get rolls(){return[...this[st]]}set rolls(t){if(!t||!Array.isArray(t))throw new TypeError(`rolls must be an array: ${t}`);this[st]=[],t.forEach((t=>{this.addRoll(t)}))}get value(){return this.rolls.reduce(((t,e)=>t+(e.useInTotal?e.calculationValue:0)),0)}addRoll(t){const e=t instanceof RollResult?t:new RollResult(t);this[st].push(e)}toJSON(){const{rolls:t,value:e}=this;return{rolls:t,type:"roll-results",value:e}}toString(){return`[${this.rolls.join(", ")}]`}}const at=Symbol("once");class ReRollModifier extends ComparisonModifier{constructor(t=!1,e=null){super(e),this.once=!!t,this.order=4}get name(){return"re-roll"}get notation(){return`r${this.once?"o":""}${super.notation}`}get once(){return!!this[at]}set once(t){this[at]=!!t}run(t,e){if(e.min===e.max)throw new DieActionValueError(e,"re-roll");return t.rolls.map((t=>{for(let r=0;r<this.maxIterations&&this.isComparePoint(t.value);r++){const r=e.rollOnce();if(t.value=r.value,t.modifiers.add("re-roll"+(this.once?"-once":"")),this.once)break}return t})),t}toJSON(){const{once:t}=this;return Object.assign(super.toJSON(),{once:t})}}const ut=Symbol("modifiers"),lt=Symbol("qty"),ct=Symbol("sides"),ht=Symbol("min-value"),ft=Symbol("max-value");class StandardDice{constructor(t,e=1,r=null,o=1,s=null){if(!t&&0!==t)throw new RequiredArgumentError("sides");if(t===1/0)throw new RangeError("numerical sides must be finite number");if(n(t)){if(t<1||!i(t))throw new RangeError("numerical sides must be a positive finite number")}else if("string"!=typeof t)throw new TypeError("non-numerical sides must be a string");if(!n(e))throw new TypeError("qty must be a positive finite integer");if(e<1||e>999)throw new RangeError("qty must be between 1 and 999");if(!n(o))throw new TypeError("min must a finite number");if(!i(o))throw new RangeError("min must a finite number");if(s&&!n(s))throw new TypeError("max must a finite number");if(s&&!i(s))throw new RangeError("max must a finite number");this[lt]=parseInt(`${e}`,10),this[ct]=t,r&&(this.modifiers=r),this[ht]=parseInt(o,10),this[ft]=s?parseInt(`${s}`,10):t}get average(){return(this.min+this.max)/2}get modifiers(){return this[ut]?new Map([...this[ut]].sort(((t,e)=>t[1].order-e[1].order))):null}set modifiers(t){let e;if(t instanceof Map)e=t;else if(Array.isArray(t))e=new Map(t.map((t=>[t.name,t])));else{if("object"!=typeof t)throw new TypeError("modifiers should be a Map, array, or an Object containing Modifiers");e=new Map(Object.entries(t))}if(e.size&&[...e.entries()].some((t=>!(t[1]instanceof Modifier))))throw new TypeError("modifiers must only contain Modifier instances");this[ut]=e,this[ut].forEach((t=>{t instanceof ExplodeModifier&&!t.comparePoint?t.comparePoint=new ComparePoint("=",this.max):t instanceof ReRollModifier&&!t.comparePoint&&(t.comparePoint=new ComparePoint("=",this.min))}))}get max(){return this[ft]}get min(){return this[ht]}get name(){return"standard"}get notation(){let t=`${this.qty}d${this.sides}`;return this.modifiers&&this.modifiers.size&&(t+=[...this.modifiers.values()].reduce(((t,e)=>t+e.notation),"")),t}get qty(){return this[lt]}get sides(){return this[ct]}roll(){const t=new RollResults;for(let e=0;e<this.qty;e++)t.addRoll(this.rollOnce());return(this.modifiers||[]).forEach((e=>{e.run(t,this)})),t}rollOnce(){return new RollResult(W.integer(this.min,this.max))}toJSON(){const{average:t,max:e,min:r,modifiers:n,name:i,notation:o,qty:s,sides:a}=this;return{average:t,max:e,min:r,modifiers:n,name:i,notation:o,qty:s,sides:a,type:"die"}}toString(){return this.notation}}class FudgeDice extends StandardDice{constructor(t=2,e=1,r=null){let n=t;if(n||0===n){if(1!==n&&2!==n)throw new RangeError("nonBlanks must be 1 or 2")}else n=2;super(n,e,r,-1,1)}get name(){return"fudge"}get nonBlanks(){return super.sides}get sides(){return`F.${this.nonBlanks}`}rollOnce(){let t=0;if(2===this.nonBlanks)t=W.integer(1,3)-2;else if(1===this.nonBlanks){const e=W.integer(1,6);1===e?t=-1:6===e&&(t=1)}return new RollResult(t)}}class PercentileDice extends StandardDice{constructor(t=1,e=null,r=!1){super(100,t,e),this.sidesAsNumber=!!r}get name(){return"percentile"}get sides(){return this.sidesAsNumber?super.sides:"%"}}var pt=Object.freeze({__proto__:null,FudgeDice:FudgeDice,PercentileDice:PercentileDice,StandardDice:StandardDice});class CriticalFailureModifier extends ComparisonModifier{constructor(t){super(t),this.order=9}get name(){return"critical-failure"}get notation(){return`cf${super.notation}`}run(t,e){return t.rolls.forEach((t=>(this.isComparePoint(t.value)&&t.modifiers.add("critical-failure"),t))),t}}class CriticalSuccessModifier extends ComparisonModifier{constructor(t){super(t),this.order=8}get name(){return"critical-success"}get notation(){return`cs${super.notation}`}run(t,e){return t.rolls.forEach((t=>(this.isComparePoint(t.value)&&t.modifiers.add("critical-success"),t))),t}}const dt=Symbol("calculation-value"),mt=Symbol("is-roll-group"),gt=Symbol("modifiers"),yt=Symbol("results"),wt=Symbol("use-in-total");class ResultGroup{constructor(t=[],e=[],r=!1,n=!0){this.isRollGroup=r,this.modifiers=e,this.results=t,this.useInTotal=n}get calculationValue(){return n(this[dt])?parseFloat(this[dt]):this.value}set calculationValue(t){const e=n(t);if(t===1/0)throw new RangeError("Results calculation value must be a finite number");if(t&&!e)throw new TypeError(`Results calculation value is invalid: ${t}`);this[dt]=e?parseFloat(`${t}`):null}get isRollGroup(){return this[mt]}set isRollGroup(t){this[mt]=!!t}get length(){return this.results.length||0}get modifierFlags(){return tt(...this.modifiers)}get modifiers(){return this[gt]}set modifiers(t){if((Array.isArray(t)||t instanceof Set)&&[...t].every((t=>"string"==typeof t)))this[gt]=new Set([...t]);else{if(t||0===t)throw new TypeError(`modifiers must be a Set or array of modifier names: ${t}`);this[gt]=new Set}}get results(){return[...this[yt]]}set results(t){if(!t||!Array.isArray(t))throw new TypeError(`results must be an array: ${t}`);this[yt]=[],t.forEach((t=>{this.addResult(t)}))}get useInTotal(){return!!this[wt]}set useInTotal(t){this[wt]=!!t}get value(){if(!this.results.length)return 0;const t=this.results.reduce(((t,e)=>{let r=e;return e instanceof ResultGroup?r=e.useInTotal?e.calculationValue:0:e instanceof RollResults&&(r=e.value),t+r}),"string"==typeof this.results[0]?"":0);return"string"==typeof t?r(t):t}addResult(t){let e;if(t instanceof ResultGroup||t instanceof RollResults)e=t;else{if("string"!=typeof t&&!n(t))throw new TypeError("value must be one of ResultGroup, RollResults, string, or number");e=t}this[yt].push(e)}toJSON(){const{calculationValue:t,isRollGroup:e,modifierFlags:r,modifiers:n,results:i,useInTotal:o,value:s}=this;return{calculationValue:t,isRollGroup:e,modifierFlags:r,modifiers:[...n],results:i,type:"result-group",useInTotal:o,value:s}}toString(){let t;return t=this.isRollGroup?`{${this.results.join(", ")}}`:this.results.join(""),this.modifierFlags&&(t=`(${t})${this.modifierFlags}`),t}}const bt=Symbol("end"),xt=Symbol("qty");class KeepModifier extends Modifier{constructor(t="h",e=1){super(),this.end=t,this.qty=e,this.order=5}get end(){return this[bt]}set end(t){if("h"!==t&&"l"!==t)throw new RangeError('End must be "h" or "l"');this[bt]=t}get name(){return`keep-${this.end}`}get notation(){return`k${this.end}${this.qty}`}get qty(){return this[xt]}set qty(t){if(t===1/0)throw new RangeError("qty must be a finite number");if(!n(t)||t<1)throw new TypeError("qty must be a positive finite integer");this[xt]=Math.floor(t)}rangeToDrop(t){return"h"===this.end?[0,t.length-this.qty]:[this.qty,t.length]}run(t,e){let r,n;return t instanceof ResultGroup?(r=t.results,n=1===r.length&&r[0]instanceof ResultGroup?r[0].results.map(((t,e)=>t instanceof RollResults?t.rolls.map(((t,r)=>({value:t.value,index:[e,r]}))):null)).flat().filter(Boolean):[...r].map(((t,e)=>({value:t.value,index:e})))):(r=t.rolls,n=[...r].map(((t,e)=>({value:t.value,index:e})))),n=n.sort(((t,e)=>t.value-e.value)).map((t=>t.index)).slice(...this.rangeToDrop(n)),n.forEach((t=>{let e;e=Array.isArray(t)?r[0].results[t[0]].rolls[t[1]]:r[t],e.modifiers.add("drop"),e.useInTotal=!1})),t}toJSON(){const{end:t,qty:e}=this;return Object.assign(super.toJSON(),{end:t,qty:e})}}class DropModifier extends KeepModifier{constructor(t="l",e=1){super(t,e),this.order=6}get name(){return`drop-${this.end}`}get notation(){return`d${this.end}${this.qty}`}rangeToDrop(t){return"h"===this.end?[t.length-this.qty,t.length]:[0,this.qty]}}const Et=Symbol("max");class MaxModifier extends Modifier{constructor(t){super(),this.max=t,this.order=2}get max(){return this[Et]}set max(t){if(!n(t))throw new TypeError("max must be a number");this[Et]=parseFloat(`${t}`)}get name(){return"max"}get notation(){return`max${this.max}`}run(t,e){const r=t;return r.rolls=t.rolls.map((t=>{const e=t;return t.value>this.max&&(e.value=this.max,e.modifiers.add("max")),e})),r}toJSON(){const{max:t}=this;return Object.assign(super.toJSON(),{max:t})}}const vt=Symbol("min");class MinModifier extends Modifier{constructor(t){super(),this.min=t,this.order=1}get min(){return this[vt]}set min(t){if(!n(t))throw new TypeError("min must be a number");this[vt]=parseFloat(`${t}`)}get name(){return"min"}get notation(){return`min${this.min}`}run(t,e){const r=t;return r.rolls=t.rolls.map((t=>{const e=t;return t.value<this.min&&(e.value=this.min,e.modifiers.add("min")),e})),r}toJSON(){const{min:t}=this;return Object.assign(super.toJSON(),{min:t})}}const Rt=Symbol("direction");class SortingModifier extends Modifier{constructor(t="a"){super(),this.direction=t,this.order=10}get direction(){return this[Rt]}set direction(t){if("a"!==t&&"d"!==t)throw new RangeError('Direction must be "a" (Ascending) or "d" (Descending)');this[Rt]=t}get name(){return"sorting"}get notation(){return`s${this.direction}`}run(t,e){let r;return r=t instanceof ResultGroup?"results":"rolls",t[r]=t[r].sort(((t,e)=>"d"===this.direction?e.value-t.value:t.value-e.value)),t instanceof ResultGroup&&(t[r]=t[r].map((t=>t instanceof ResultGroup||t instanceof RollResults?this.run(t,e):t))),t}toJSON(){const{direction:t}=this;return Object.assign(super.toJSON(),{direction:t})}}const St=Symbol("failure-cp");class TargetModifier extends ComparisonModifier{constructor(t,e=null){super(t),this.failureComparePoint=e,this.order=7}get failureComparePoint(){return this[St]}set failureComparePoint(t){if(t&&!(t instanceof ComparePoint))throw new TypeError("failure comparePoint must be instance of ComparePoint or null");this[St]=t||null}get name(){return"target"}get notation(){return`${super.notation}${this.failureComparePoint?`f${this.failureComparePoint}`:""}`}get successComparePoint(){return this.comparePoint}set successComparePoint(t){super.comparePoint=t}getStateValue(t){return this.isSuccess(t)?1:this.isFailure(t)?-1:0}isFailure(t){return!!this.failureComparePoint&&this.failureComparePoint.isMatch(t)}isNeutral(t){return!this.isSuccess(t)&&!this.isFailure(t)}isSuccess(t){return this.isComparePoint(t)}run(t,e){let r;return r=t instanceof ResultGroup?t.results:t.rolls,r.forEach((t=>{this.isSuccess(t.value)?t.modifiers.add("target-success"):this.isFailure(t.value)&&t.modifiers.add("target-failure"),t.calculationValue=this.getStateValue(t.value)})),t}toJSON(){const{failureComparePoint:t,successComparePoint:e}=this,r=super.toJSON();return delete r.comparePoint,Object.assign(r,{failureComparePoint:t,successComparePoint:e})}}var At=Object.freeze({__proto__:null,ComparisonModifier:ComparisonModifier,CriticalFailureModifier:CriticalFailureModifier,CriticalSuccessModifier:CriticalSuccessModifier,DropModifier:DropModifier,ExplodeModifier:ExplodeModifier,KeepModifier:KeepModifier,MaxModifier:MaxModifier,MinModifier:MinModifier,Modifier:Modifier,ReRollModifier:ReRollModifier,SortingModifier:SortingModifier,TargetModifier:TargetModifier}),Mt=Object.freeze({__proto__:null,ResultGroup:ResultGroup,RollResult:RollResult,RollResults:RollResults});const Ct=t=>{try{return!(!t||btoa(atob(t))!==t)}catch(t){return!1}},Tt=t=>{try{const e=!!t&&JSON.parse(t);return!(!e||"object"!=typeof e)}catch(t){return!1}},Nt=Symbol("modifiers"),Ot=Symbol("expressions");class RollGroup{constructor(t=[],e=[]){this.expressions=t,this.modifiers=e}get expressions(){return[...this[Ot]||[]]}set expressions(t){if(!t)throw new RequiredArgumentError("expressions");if(!Array.isArray(t))throw new TypeError(`expressions must be an array: ${t}`);this[Ot]=[],t.forEach((e=>{if(!e||!Array.isArray(e))throw new TypeError(`Expressions must be an array of arrays: ${t}`);if(0===e.length)throw new TypeError(`Sub expressions cannot be empty: ${t}`);if(!e.every((t=>t instanceof StandardDice||"string"==typeof t||"number"==typeof t)))throw new TypeError("Sub expression items must be Dice, numbers, or strings");this[Ot].push(e)}))}get modifiers(){return this[Nt]?new Map([...this[Nt]].sort(((t,e)=>t[1].order-e[1].order))):null}set modifiers(t){let e;if(t instanceof Map)e=t;else if(Array.isArray(t))e=new Map(t.map((t=>[t.name,t])));else{if("object"!=typeof t)throw new TypeError("modifiers should be a Map, array, or an Object containing Modifiers");e=new Map(Object.entries(t))}if(e.size&&[...e.entries()].some((t=>!(t[1]instanceof Modifier))))throw new TypeError("modifiers must only contain Modifier instances");this[Nt]=e}get notation(){let t=this.expressions.map((t=>t.reduce(((t,e)=>t+e),""))).join(", ");return t=`{${t}}`,this.modifiers&&this.modifiers.size&&(t+=[...this.modifiers.values()].reduce(((t,e)=>t+e.notation),"")),t}roll(){const t=new ResultGroup(this.expressions.map((t=>{const e=t.map((t=>t instanceof StandardDice?t.roll():t));return new ResultGroup(e)})));return t.isRollGroup=!0,(this.modifiers||[]).forEach((e=>{e.run(t,this)})),t}toJSON(){const{modifiers:t,notation:e,expressions:r}=this;return{expressions:r,modifiers:t,notation:e,type:"group"}}toString(){return this.notation}}function $t(t,e,r,n){this.message=t,this.expected=e,this.found=r,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,$t)}function Ft(t,e){e=void 0!==e?e:{};var n,i,o,s,a={},u={Main:ee},l=ee,c=Xt("{",!1),h=",",f=Xt(",",!1),p=Xt("}",!1),d="d",m=Xt("d",!1),g="d%",y=Xt("d%",!1),w="dF",b=Xt("dF",!1),x=Xt(".",!1),E=/^[12]/,v=Ht(["1","2"],!1,!1),R="!",S=Xt("!",!1),A=Xt("p",!1),M=/^[lh]/,C=Ht(["l","h"],!1,!1),T=Xt("k",!1),N="max",O=Xt("max",!1),$="min",F=Xt("min",!1),D=Xt("r",!1),P=Xt("o",!1),J="cs",q=Xt("cs",!1),I="cf",j=Xt("cf",!1),G=Xt("s",!1),V=Xt("a",!1),k=Xt("f",!1),_="!=",B=Xt("!=",!1),z="<=",K=Xt("<=",!1),W=">=",U=Xt(">=",!1),Z=Xt("=",!1),L=Xt(">",!1),X=Xt("<",!1),H="(",Q=Xt("(",!1),Y=")",tt=Xt(")",!1),et="abs",rt=Xt("abs",!1),nt="ceil",it=Xt("ceil",!1),ot="cos",st=Xt("cos",!1),at="exp",ut=Xt("exp",!1),lt="floor",ct=Xt("floor",!1),ht="log",ft=Xt("log",!1),pt="round",dt=Xt("round",!1),mt="sign",gt=Xt("sign",!1),yt="sin",wt=Xt("sin",!1),bt="sqrt",xt=Xt("sqrt",!1),Et="tan",vt=Xt("tan",!1),Rt="pow",St=Xt("pow",!1),At=Xt("-",!1),Mt=/^[.]/,Ct=Ht(["."],!1,!1),Tt=/^[1-9]/,Nt=Ht([["1","9"]],!1,!1),Ot=/^[0-9]/,Ft=Ht([["0","9"]],!1,!1),Dt=function(){return parseInt(Lt(),10)},Pt=Xt("**",!1),Jt=Xt("*",!1),qt=Xt("^",!1),It=Xt("%",!1),jt=Xt("/",!1),Gt=Xt("+",!1),Vt={type:"other",description:"whitespace"},kt=/^[ \t\n\r]/,_t=Ht([" ","\t","\n","\r"],!1,!1),Bt=0,zt=0,Kt=[{line:1,column:1}],Wt=0,Ut=[],Zt=0;if("startRule"in e){if(!(e.startRule in u))throw new Error("Can't start parsing from rule \""+e.startRule+'".');l=u[e.startRule]}function Lt(){return t.substring(zt,Bt)}function Xt(t,e){return{type:"literal",text:t,ignoreCase:e}}function Ht(t,e,r){return{type:"class",parts:t,inverted:e,ignoreCase:r}}function Qt(e){var r,n=Kt[e];if(n)return n;for(r=e-1;!Kt[r];)r--;for(n={line:(n=Kt[r]).line,column:n.column};r<e;)10===t.charCodeAt(r)?(n.line++,n.column=1):n.column++,r++;return Kt[e]=n,n}function Yt(t,e){var r=Qt(t),n=Qt(e);return{start:{offset:t,line:r.line,column:r.column},end:{offset:e,line:n.line,column:n.column}}}function te(t){Bt<Wt||(Bt>Wt&&(Wt=Bt,Ut=[]),Ut.push(t))}function ee(){return ae()}function re(){var e,r,n,i,o,s,u,l,h,d;if(e=Bt,123===t.charCodeAt(Bt)?(r="{",Bt++):(r=a,0===Zt&&te(c)),r!==a)if(pe()!==a)if((n=ae())!==a){for(i=[],o=Bt,(s=pe())!==a?(44===t.charCodeAt(Bt)?(u=",",Bt++):(u=a,0===Zt&&te(f)),u!==a&&(l=pe())!==a&&(h=ae())!==a?o=s=[s,u,l,h]:(Bt=o,o=a)):(Bt=o,o=a);o!==a;)i.push(o),o=Bt,(s=pe())!==a?(44===t.charCodeAt(Bt)?(u=",",Bt++):(u=a,0===Zt&&te(f)),u!==a&&(l=pe())!==a&&(h=ae())!==a?o=s=[s,u,l,h]:(Bt=o,o=a)):(Bt=o,o=a);if(i!==a)if((o=pe())!==a)if(125===t.charCodeAt(Bt)?(s="}",Bt++):(s=a,0===Zt&&te(p)),s!==a){for(u=[],l=ie();l!==a;)u.push(l),l=ie();u!==a?(zt=e,d=u,e=r=new RollGroup([n,...i.map((t=>t[3]))],Object.assign({},...d.map((t=>({[t.name]:t})))))):(Bt=e,e=a)}else Bt=e,e=a;else Bt=e,e=a;else Bt=e,e=a}else Bt=e,e=a;else Bt=e,e=a;else Bt=e,e=a;return e}function ne(){var e,r,n,i;if(e=Bt,(r=function(){var e,r,n,i;e=Bt,(r=se())===a&&(r=null);r!==a?(100===t.charCodeAt(Bt)?(n=d,Bt++):(n=a,0===Zt&&te(m)),n!==a&&(i=se())!==a?(zt=e,e=r=new StandardDice(i,r||1)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(r=function(){var e,r,n;e=Bt,(r=se())===a&&(r=null);r!==a?(t.substr(Bt,2)===g?(n=g,Bt+=2):(n=a,0===Zt&&te(y)),n!==a?(zt=e,e=r=new PercentileDice(r||1)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(r=function(){var e,r,n,i,o,s;e=Bt,(r=se())===a&&(r=null);r!==a?(t.substr(Bt,2)===w?(n=w,Bt+=2):(n=a,0===Zt&&te(b)),n!==a?(i=Bt,46===t.charCodeAt(Bt)?(o=".",Bt++):(o=a,0===Zt&&te(x)),o!==a?(E.test(t.charAt(Bt))?(s=t.charAt(Bt),Bt++):(s=a,0===Zt&&te(v)),s!==a?i=o=[o,s]:(Bt=i,i=a)):(Bt=i,i=a),i===a&&(i=null),i!==a?(zt=e,u=r,e=r=new FudgeDice((l=i)?parseInt(l[1],10):2,u||1)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a);var u,l;return e}()),r!==a){for(n=[],i=ie();i!==a;)n.push(i),i=ie();n!==a?(zt=e,e=r=function(t,e){return t.modifiers=Object.assign({},...e.map((t=>({[t.name]:t})))),t}(r,n)):(Bt=e,e=a)}else Bt=e,e=a;return e}function ie(){var e;return(e=function(){var e,r,n,i,o;e=Bt,33===t.charCodeAt(Bt)?(r=R,Bt++):(r=a,0===Zt&&te(S));r!==a?(33===t.charCodeAt(Bt)?(n=R,Bt++):(n=a,0===Zt&&te(S)),n===a&&(n=null),n!==a?(112===t.charCodeAt(Bt)?(i="p",Bt++):(i=a,0===Zt&&te(A)),i===a&&(i=null),i!==a?((o=oe())===a&&(o=null),o!==a?(zt=e,e=r=new ExplodeModifier(o,!!n,!!i)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,(r=oe())!==a?((n=function(){var e,r,n;e=Bt,102===t.charCodeAt(Bt)?(r="f",Bt++):(r=a,0===Zt&&te(k));r!==a&&(n=oe())!==a?(zt=e,e=r=n):(Bt=e,e=a);return e}())===a&&(n=null),n!==a?(zt=e,e=r=new TargetModifier(r,n)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n,i;e=Bt,100===t.charCodeAt(Bt)?(r=d,Bt++):(r=a,0===Zt&&te(m));r!==a?(M.test(t.charAt(Bt))?(n=t.charAt(Bt),Bt++):(n=a,0===Zt&&te(C)),n===a&&(n=null),n!==a&&(i=ce())!==a?(zt=e,e=r=new DropModifier(n||"l",i)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n,i;e=Bt,107===t.charCodeAt(Bt)?(r="k",Bt++):(r=a,0===Zt&&te(T));r!==a?(M.test(t.charAt(Bt))?(n=t.charAt(Bt),Bt++):(n=a,0===Zt&&te(C)),n===a&&(n=null),n!==a&&(i=ce())!==a?(zt=e,e=r=new KeepModifier(n||"h",i)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n,i;e=Bt,114===t.charCodeAt(Bt)?(r="r",Bt++):(r=a,0===Zt&&te(D));r!==a?(111===t.charCodeAt(Bt)?(n="o",Bt++):(n=a,0===Zt&&te(P)),n===a&&(n=null),n!==a?((i=oe())===a&&(i=null),i!==a?(zt=e,e=r=new ReRollModifier(!!n,i)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,t.substr(Bt,2)===J?(r=J,Bt+=2):(r=a,0===Zt&&te(q));r!==a&&(n=oe())!==a?(zt=e,e=r=new CriticalSuccessModifier(n)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,t.substr(Bt,2)===I?(r=I,Bt+=2):(r=a,0===Zt&&te(j));r!==a&&(n=oe())!==a?(zt=e,e=r=new CriticalFailureModifier(n)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,115===t.charCodeAt(Bt)?(r="s",Bt++):(r=a,0===Zt&&te(G));r!==a?(97===t.charCodeAt(Bt)?(n="a",Bt++):(n=a,0===Zt&&te(V)),n===a&&(100===t.charCodeAt(Bt)?(n=d,Bt++):(n=a,0===Zt&&te(m))),n===a&&(n=null),n!==a?(zt=e,e=r=new SortingModifier(n||"a")):(Bt=e,e=a)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,t.substr(Bt,3)===N?(r=N,Bt+=3):(r=a,0===Zt&&te(O));r!==a&&(n=le())!==a?(zt=e,e=r=new MaxModifier(n)):(Bt=e,e=a);return e}())===a&&(e=function(){var e,r,n;e=Bt,t.substr(Bt,3)===$?(r=$,Bt+=3):(r=a,0===Zt&&te(F));r!==a&&(n=le())!==a?(zt=e,e=r=new MinModifier(n)):(Bt=e,e=a);return e}()),e}function oe(){var e,r,n;return e=Bt,(r=function(){var e;t.substr(Bt,2)===_?(e=_,Bt+=2):(e=a,0===Zt&&te(B));e===a&&(t.substr(Bt,2)===z?(e=z,Bt+=2):(e=a,0===Zt&&te(K)),e===a&&(t.substr(Bt,2)===W?(e=W,Bt+=2):(e=a,0===Zt&&te(U)),e===a&&(61===t.charCodeAt(Bt)?(e="=",Bt++):(e=a,0===Zt&&te(Z)),e===a&&(62===t.charCodeAt(Bt)?(e=">",Bt++):(e=a,0===Zt&&te(L)),e===a&&(60===t.charCodeAt(Bt)?(e="<",Bt++):(e=a,0===Zt&&te(X)))))));return e}())!==a&&(n=le())!==a?(zt=e,e=r=new ComparePoint(r,n)):(Bt=e,e=a),e}function se(){var e,n,i,o,s,u,l,c,h,f;if((e=ce())===a)if(e=Bt,40===t.charCodeAt(Bt)?(n=H,Bt++):(n=a,0===Zt&&te(Q)),n!==a)if(pe()!==a){if(i=Bt,(o=le())!==a){if(s=[],u=Bt,(l=pe())!==a&&(c=fe())!==a&&(h=pe())!==a&&(f=le())!==a?u=l=[l,c,h,f]:(Bt=u,u=a),u!==a)for(;u!==a;)s.push(u),u=Bt,(l=pe())!==a&&(c=fe())!==a&&(h=pe())!==a&&(f=le())!==a?u=l=[l,c,h,f]:(Bt=u,u=a);else s=a;s!==a?i=o=[o,s]:(Bt=i,i=a)}else Bt=i,i=a;i!==a&&(o=pe())!==a?(41===t.charCodeAt(Bt)?(s=Y,Bt++):(s=a,0===Zt&&te(tt)),s!==a?(zt=e,e=n=r(Lt())):(Bt=e,e=a)):(Bt=e,e=a)}else Bt=e,e=a;else Bt=e,e=a;return e}function ae(){var t,e,r,n,i,o,s,u,l,c;if(t=Bt,(e=ue())!==a){for(r=[],n=Bt,(i=pe())!==a&&(o=fe())!==a&&(s=pe())!==a&&(u=ue())!==a?n=i=[i,o,s,u]:(Bt=n,n=a);n!==a;)r.push(n),n=Bt,(i=pe())!==a&&(o=fe())!==a&&(s=pe())!==a&&(u=ue())!==a?n=i=[i,o,s,u]:(Bt=n,n=a);r!==a?(zt=t,l=e,c=r,l=Array.isArray(l)?l:[l],t=e=[...l,...c.map((([,t,,e])=>[t,e])).flat(2)]):(Bt=t,t=a)}else Bt=t,t=a;return t}function ue(){var e,r,n,i,o,s;return(e=function(){var e,r,n,i,o,s,u;e=Bt,t.substr(Bt,3)===et?(r=et,Bt+=3):(r=a,0===Zt&&te(rt));r===a&&(t.substr(Bt,4)===nt?(r=nt,Bt+=4):(r=a,0===Zt&&te(it)),r===a&&(t.substr(Bt,3)===ot?(r=ot,Bt+=3):(r=a,0===Zt&&te(st)),r===a&&(t.substr(Bt,3)===at?(r=at,Bt+=3):(r=a,0===Zt&&te(ut)),r===a&&(t.substr(Bt,5)===lt?(r=lt,Bt+=5):(r=a,0===Zt&&te(ct)),r===a&&(t.substr(Bt,3)===ht?(r=ht,Bt+=3):(r=a,0===Zt&&te(ft)),r===a&&(t.substr(Bt,5)===pt?(r=pt,Bt+=5):(r=a,0===Zt&&te(dt)),r===a&&(t.substr(Bt,4)===mt?(r=mt,Bt+=4):(r=a,0===Zt&&te(gt)),r===a&&(t.substr(Bt,3)===yt?(r=yt,Bt+=3):(r=a,0===Zt&&te(wt)),r===a&&(t.substr(Bt,4)===bt?(r=bt,Bt+=4):(r=a,0===Zt&&te(xt)),r===a&&(t.substr(Bt,3)===Et?(r=Et,Bt+=3):(r=a,0===Zt&&te(vt))))))))))));r!==a?(40===t.charCodeAt(Bt)?(n=H,Bt++):(n=a,0===Zt&&te(Q)),n!==a&&pe()!==a&&(i=ae())!==a&&pe()!==a?(41===t.charCodeAt(Bt)?(o=Y,Bt++):(o=a,0===Zt&&te(tt)),o!==a?(zt=e,l=i,e=r=[`${r}(`,...l,")"]):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a);var l;e===a&&(e=Bt,t.substr(Bt,3)===Rt?(r=Rt,Bt+=3):(r=a,0===Zt&&te(St)),r===a&&(t.substr(Bt,3)===N?(r=N,Bt+=3):(r=a,0===Zt&&te(O)),r===a&&(t.substr(Bt,3)===$?(r=$,Bt+=3):(r=a,0===Zt&&te(F)))),r!==a?(40===t.charCodeAt(Bt)?(n=H,Bt++):(n=a,0===Zt&&te(Q)),n!==a&&pe()!==a&&(i=ae())!==a&&pe()!==a?(44===t.charCodeAt(Bt)?(o=h,Bt++):(o=a,0===Zt&&te(f)),o!==a&&pe()!==a&&(s=ae())!==a&&pe()!==a?(41===t.charCodeAt(Bt)?(u=Y,Bt++):(u=a,0===Zt&&te(tt)),u!==a?(zt=e,e=r=function(t,e,r){return[`${t}(`,...e,",",...r,")"]}(r,i,s)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a)):(Bt=e,e=a));return e}())===a&&(e=ne())===a&&(e=le())===a&&(e=Bt,40===t.charCodeAt(Bt)?(r=H,Bt++):(r=a,0===Zt&&te(Q)),r!==a&&pe()!==a&&(n=ae())!==a&&pe()!==a?(41===t.charCodeAt(Bt)?(i=Y,Bt++):(i=a,0===Zt&&te(tt)),i!==a?(zt=e,o=n,s=i,e=r=[r,...o,s]):(Bt=e,e=a)):(Bt=e,e=a),e===a&&(e=re())),e}function le(){var e,r,n,i,o;return e=Bt,45===t.charCodeAt(Bt)?(r="-",Bt++):(r=a,0===Zt&&te(At)),r===a&&(r=null),r!==a&&he()!==a?(n=Bt,Mt.test(t.charAt(Bt))?(i=t.charAt(Bt),Bt++):(i=a,0===Zt&&te(Ct)),i!==a&&(o=he())!==a?n=i=[i,o]:(Bt=n,n=a),n===a&&(n=null),n!==a?(zt=e,e=r=parseFloat(Lt())):(Bt=e,e=a)):(Bt=e,e=a),e}function ce(){var e,r,n,i;if(e=Bt,Tt.test(t.charAt(Bt))?(r=t.charAt(Bt),Bt++):(r=a,0===Zt&&te(Nt)),r!==a){for(n=[],Ot.test(t.charAt(Bt))?(i=t.charAt(Bt),Bt++):(i=a,0===Zt&&te(Ft));i!==a;)n.push(i),Ot.test(t.charAt(Bt))?(i=t.charAt(Bt),Bt++):(i=a,0===Zt&&te(Ft));n!==a?(zt=e,e=r=Dt()):(Bt=e,e=a)}else Bt=e,e=a;return e}function he(){var e,r,n;if(e=Bt,r=[],Ot.test(t.charAt(Bt))?(n=t.charAt(Bt),Bt++):(n=a,0===Zt&&te(Ft)),n!==a)for(;n!==a;)r.push(n),Ot.test(t.charAt(Bt))?(n=t.charAt(Bt),Bt++):(n=a,0===Zt&&te(Ft));else r=a;return r!==a&&(zt=e,r=Dt()),e=r}function fe(){var e,r;return e=Bt,"**"===t.substr(Bt,2)?(r="**",Bt+=2):(r=a,0===Zt&&te(Pt)),r!==a&&(zt=e,r="^"),(e=r)===a&&(42===t.charCodeAt(Bt)?(e="*",Bt++):(e=a,0===Zt&&te(Jt)),e===a&&(94===t.charCodeAt(Bt)?(e="^",Bt++):(e=a,0===Zt&&te(qt)),e===a&&(37===t.charCodeAt(Bt)?(e="%",Bt++):(e=a,0===Zt&&te(It)),e===a&&(47===t.charCodeAt(Bt)?(e="/",Bt++):(e=a,0===Zt&&te(jt)),e===a&&(43===t.charCodeAt(Bt)?(e="+",Bt++):(e=a,0===Zt&&te(Gt)),e===a&&(45===t.charCodeAt(Bt)?(e="-",Bt++):(e=a,0===Zt&&te(At)))))))),e}function pe(){var e,r;for(Zt++,e=[],kt.test(t.charAt(Bt))?(r=t.charAt(Bt),Bt++):(r=a,0===Zt&&te(_t));r!==a;)e.push(r),kt.test(t.charAt(Bt))?(r=t.charAt(Bt),Bt++):(r=a,0===Zt&&te(_t));return Zt--,e===a&&(r=a,0===Zt&&te(Vt)),e}if((n=l())!==a&&Bt===t.length)return n;throw n!==a&&Bt<t.length&&te({type:"end"}),i=Ut,o=Wt<t.length?t.charAt(Wt):null,s=Wt<t.length?Yt(Wt,Wt+1):Yt(Wt,Wt),new $t($t.buildMessage(i,o),i,o,s)}!function(t,e){function r(){this.constructor=t}r.prototype=e.prototype,t.prototype=new r}($t,Error),$t.buildMessage=function(t,e){var r={literal:function(t){return'"'+i(t.text)+'"'},class:function(t){var e=t.parts.map((function(t){return Array.isArray(t)?o(t[0])+"-"+o(t[1]):o(t)}));return"["+(t.inverted?"^":"")+e+"]"},any:function(){return"any character"},end:function(){return"end of input"},other:function(t){return t.description}};function n(t){return t.charCodeAt(0).toString(16).toUpperCase()}function i(t){return t.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+n(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+n(t)}))}function o(t){return t.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(t){return"\\x0"+n(t)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(t){return"\\x"+n(t)}))}function s(t){return r[t.type](t)}return"Expected "+function(t){var e,r,n=t.map(s);if(n.sort(),n.length>0){for(e=1,r=1;e<n.length;e++)n[e-1]!==n[e]&&(n[r]=n[e],r++);n.length=r}switch(n.length){case 1:return n[0];case 2:return n[0]+" or "+n[1];default:return n.slice(0,-1).join(", ")+", or "+n[n.length-1]}}(t)+" but "+function(t){return t?'"'+i(t)+'"':"end of input"}(e)+" found."};class Parser{static parse(t){if(!t)throw new RequiredArgumentError("notation");if("string"!=typeof t)throw new TypeError("Notation must be a string");return Ft(t)}}const Dt=Object.freeze({BASE_64:1,JSON:0,OBJECT:2}),Pt=Symbol("notation"),Jt=Symbol("maxTotal"),qt=Symbol("minTotal"),It=Symbol("expressions"),jt=Symbol("roll-method"),Gt=Symbol("rolls"),Vt=Symbol("set-rolls"),kt=Symbol("total"),_t=t=>((t,e=0)=>parseFloat(parseFloat(`${t}`).toFixed(e||0)))(t.calculationValue,2);class DiceRoll{constructor(t){if(!t)throw new RequiredArgumentError("notation");if(this[It]=[],t instanceof Object&&!Array.isArray(t)){if(!t.notation)throw new RequiredArgumentError("notation");if("string"!=typeof t.notation)throw new NotationError(t.notation);t.rolls&&this[Vt](t.rolls),this[Pt]=t.notation,this[It]=Parser.parse(this.notation),this.hasRolls()||this.roll()}else{if("string"!=typeof t)throw new NotationError(t);this[Pt]=t,this[It]=Parser.parse(this.notation),this.roll()}}get averageTotal(){return(this.maxTotal+this.minTotal)/2}get maxTotal(){if(!this.hasExpressions())return 0;if(!this[Jt]){const t=this[jt](K.max);this[Jt]=_t(t)}return this[Jt]}get minTotal(){if(!this.hasExpressions())return 0;if(!this[qt]){const t=this[jt](K.min);this[qt]=_t(t)}return this[qt]}get notation(){return this[Pt]}get output(){let t=`${this.notation}: `;return this.hasRolls()?t+=`${this[Gt]} = ${this.total}`:t+="No dice rolled",t}get rolls(){return this[Gt]?this[Gt].results:[]}get total(){return!this[kt]&&this.hasRolls()&&(this[kt]=_t(this[Gt])),this[kt]||0}export(t=Dt.JSON){switch(t){case Dt.BASE_64:return btoa(this.export(Dt.JSON));case Dt.JSON:return JSON.stringify(this);case Dt.OBJECT:return JSON.parse(this.export(Dt.JSON));default:throw new TypeError(`Invalid export format "${t}"`)}}hasExpressions(){return this[It]&&this[It].length>0}hasRolls(){return this.hasExpressions()&&this.rolls.length>0}roll(){return this[kt]=0,this[Gt]=this[jt](),this.rolls}toJSON(){const{averageTotal:t,maxTotal:e,minTotal:r,notation:n,output:i,rolls:o,total:s}=this;return{averageTotal:t,maxTotal:e,minTotal:r,notation:n,output:i,rolls:o,total:s,type:"dice-roll"}}toString(){return this.output}static import(t){if(t){if(Tt(t))return DiceRoll.import(JSON.parse(t));if(Ct(t))return DiceRoll.import(atob(t));if("object"==typeof t)return new DiceRoll(t);throw new DataFormatError(t)}throw new RequiredArgumentError("data")}[jt](t){let e;t&&(e=W.engine,W.engine=t);const r=new ResultGroup(this[It].map((t=>t instanceof StandardDice||t instanceof RollGroup?t.roll():t)).filter((t=>!!t||0===t)));return t&&(W.engine=e),r}[Vt](t){if(t instanceof ResultGroup)this[Gt]=t;else if(t instanceof RollResults)this[Gt]=new ResultGroup([t]);else{if(!Array.isArray(t))throw new TypeError("Rolls must be a valid result object, or an array");this[Gt]=new ResultGroup(t.map((t=>{if(t instanceof ResultGroup||t instanceof RollResults)return t;if(Array.isArray(t))return new RollResults(t);if("object"==typeof t){if(Array.isArray(t.results))return new ResultGroup(t.results,t.modifiers||[],t.isRollGroup||!1,"boolean"!=typeof t.useInTotal||t.useInTotal);if(Array.isArray(t.rolls))return new RollResults(t.rolls)}return t})))}}}const Bt=Symbol("log");class DiceRoller{constructor(t){this[Bt]=[],t&&this.import(t)}get log(){return this[Bt]||[]}get output(){return this.log.join("; ")}get total(){return this.log.reduce(((t,e)=>t+e.total),0)}clearLog(){this[Bt].length=0}export(t=Dt.JSON){switch(t){case Dt.BASE_64:return btoa(this.export(Dt.JSON));case Dt.JSON:return JSON.stringify(this);case Dt.OBJECT:return JSON.parse(this.export(Dt.JSON));default:throw new TypeError(`Invalid export format "${t}"`)}}import(t){if(t){if(Tt(t))return this.import(JSON.parse(t));if(Ct(t))return this.import(atob(t));if("object"==typeof t){let e=t.log||null;if(!t.log&&Array.isArray(t)&&t.length&&(e=t),e&&Array.isArray(e))e.forEach((t=>{this[Bt].push(DiceRoll.import(t))}));else if(e)throw new TypeError("log must be an array");return this.log}throw new DataFormatError(t)}throw new RequiredArgumentError("data")}roll(...t){const e=t.filter(Boolean);if(0===e.length)throw new RequiredArgumentError("notations");const r=e.map((t=>{const e=new DiceRoll(t);return this[Bt].push(e),e}));return r.length>1?r:r[0]}toJSON(){const{log:t,output:e,total:r}=this;return{log:t,output:e,total:r,type:"dice-roller"}}toString(){return this.output}static import(t){const e=new DiceRoller;return e.import(t),e}}export{ComparePoint,pt as Dice,DiceRoll,DiceRoller,e as Exceptions,At as Modifiers,U as NumberGenerator,Parser,Mt as Results,RollGroup,Dt as exportFormats};
